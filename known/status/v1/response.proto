syntax = "proto3";

// 根据具体的微服务名称做更改
package grpc_kit.api.known.status.v1;

option go_package = "github.com/grpc-kit/pkg/api/known/status/v1;statusv1";

import "google/protobuf/any.proto";

import "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-openapiv2/options/annotations.proto";

// Status 用于定义统一错误状态码
message Status {
  int32 code = 1;
  string status = 2;
  string message = 3;
  repeated google.protobuf.Any details = 4;
}

// ErrorResponse 用于定义统一错误响应体
message ErrorResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    example: '{"error":{"code":5,"status":"NotFound","message":"unknown service","details":[{"@type":"type.googleapis.com/grpc_kit.api.known.status.v1.TracingRequest","id":"b17f76dc51de4098bc974e5f2009c097"}]}}'
  };

  Status error = 1;
}

// TracingRequest 用于标志全局请求ID
message TracingRequest {
  string id = 1;
}

// HealthCheckRequest 用于健康检测请求，格式同 grpc.health.v1.health 定义
message HealthCheckRequest {
  // 设置结构体，如：必填字段，请求体示例
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["service"],
    },
  };

  string service = 1;
}

// HealthCheckResponse 用于健康检测响应，格式同 grpc.health.v1.health 定义
message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }

  ServingStatus status = 1;
}
